= form.inputs do
  = form.input :registration_type_id, :as => :radio, :collection => @registration_types, :member_label => Proc.new { |rt| "#{t(rt.title)} - #{number_to_currency(rt.price(@attendee.registration_date), :locale => :pt)}"}, :required => true, :input_html => {:tabindex => autotab}
= form.inputs :attendee_personal do
  = form.input :first_name, :required => true, :input_html => {:tabindex => autotab}
  = form.input :last_name, :required => true, :input_html => {:tabindex => autotab}
  = form.input :badge_name, :input_html => {:tabindex => autotab}
  = form.input :gender, :as => :select, :collection => Gender.options_for_select, :input_html => {:tabindex => autotab}
  = form.input :organization, :required => true, :input_html => {:tabindex => autotab}
  = form.input :cpf, :required => true, :input_html => {:tabindex => autotab}
  = form.input :twitter_user, :input_html => {:tabindex => autotab}
= form.inputs :attendee_address do
  = form.input :country, :required => true, :as => :country, :priority_countries => [:BR], :input_html => {:tabindex => autotab}
  = form.input :email, :required => true, :input_html => {:tabindex => autotab}
  = form.input :email_confirmation, :required => true, :input_html => {:tabindex => autotab}
  = form.input :phone, :required => true, :input_html => {:tabindex => autotab}
  = form.input :address, :required => true, :input_html => {:tabindex => autotab}
  = form.input :neighbourhood, :input_html => {:tabindex => autotab}
  = form.input :city, :required => true, :input_html => {:tabindex => autotab}
  = form.input :state, :required => true, :as => :select, :collection => ActionView::Helpers::FormOptionsHelper::ESTADOS_BRASILEIROS, :input_html => {:tabindex => autotab}
  = form.input :zipcode, :required => true, :input_html => {:tabindex => autotab}
= form.inputs :attendee_courses do
  = form.input :courses, :as => :check_boxes, :label => false, :collection => Course.for_event(Event.current), :member_label => Proc.new { |c| "#{t(c.full_name)} - #{number_to_currency(c.price(@attendee.registration_date), :locale => :pt)} #{c.has_reached_limit? ? '**' : ''}"}, :input_html => {:tabindex => autotab}

%div.total
  %h6= parent? ? t('registration_total.title_partial') : t('registration_total.title')
  %table
    %tr
      %th= t('registration_total.base_price')
      %td#registration_price= number_to_currency(0, :locale => :pt)
    %tr
      %th= t('registration_total.courses')
      %td#course_price= number_to_currency(0, :locale => :pt)
    %tr
      %th= t('registration_total.discount')
      %td#discount= number_to_currency(0, :locale => :pt)
    %tr.last
      %th= t('registration_total.total')
      %td#total= number_to_currency(0, :locale => :pt)

#flash_notice= t('flash.registration.attendee')

:javascript
  $(document).ready(function() {
    $("#attendee_country").bind('updated', countryTriggered);
    $("#attendee_registration_type_id_input input:radio").bind('change', registrationTypeTriggered);
    $("#attendee_email_input input").bind('change', emailTriggered);
    
    $("#attendee_email_input input").trigger('change');
    $("#attendee_country").bindSelectUpdated().trigger('updated');
    $("#attendee_registration_type_id_input input:radio").trigger('change');
    
    var courses = $("#attendee_courses_input fieldset ol li label input");
    for(var i = 0; i < courses.length; i++) {
      $(courses[i]).bind('change', courseTriggered);
      $(courses[i]).trigger('change');
    }
    
    $(".total").show();
  })

  function countryTriggered() {
    if ($(this).val() != "BR") {
      $('#attendee_state').val('').attr('disabled', 'disabled');
      $('#attendee_state_input').find('label abbr').hide();
      $("#attendee_cpf").attr('disabled', 'disabled');
      $('#attendee_cpf_input').hide();      
    } else {
      $('#attendee_state').removeAttr('disabled');
      $('#attendee_state_input').find('label abbr').show();
      $("#attendee_cpf").removeAttr('disabled');
      $('#attendee_cpf_input').show();      
    }
  }
  
  function registrationTypeTriggered() {
    var checked_type = $("#attendee_registration_type_id_input input:radio:checked");
    if(checked_type.length == 0) {
      return;
    }
  
    var price = "#{number_to_currency(0, :locale => :pt)}";
    if (checked_type.val() == 1) {
      $("#attendee_organization_input").find('label abbr').show();
      price = "#{number_to_currency(RegistrationType.find(1).price(@attendee.registration_date), :locale => :pt)}";
    } else if (checked_type.val() == 2) {
      $("#attendee_organization_input").find('label abbr').hide();
      price = "#{number_to_currency(RegistrationType.find(2).price(@attendee.registration_date), :locale => :pt)}";
      $("#attendee_registration_type_id_input input:radio").attr('disabled', 'disabled');
    } else if (checked_type.val() == 3) {
      $("#attendee_organization_input").find('label abbr').hide();
      price = "#{number_to_currency(RegistrationType.find(3).price(@attendee.registration_date), :locale => :pt)}";
    } else if (checked_type.val() == 4) {
      $("#attendee_organization_input").find('label abbr').hide();
      price = "#{number_to_currency(RegistrationType.find(4).price(@attendee.registration_date), :locale => :pt)}";
    }
    
    $("td#registration_price").text(price);
    updateTotal();
    
    $("#attendee_email_input input").trigger('change');
  }
  
  function emailTriggered() {
    $.post('#{pre_registered_attendee_path(:format => :js)}', {email: $(this).val()}, #{RegistrationPeriod.for(@attendee.registration_date).size > 1 ? "updateDiscount" : "function() {}"});
  }
  
  function updateDiscount(is_pre_registered) {
    var checked_type = $("#attendee_registration_type_id_input input:radio:checked");
    var discount;
    if(is_pre_registered == 'true' && checked_type.length == 1) {
      discount = getDiscount(checked_type);
    }
    else {
      discount = 0;
    }
    
    if(discount < 0)
      $("td#discount").addClass('negative');
    else
      $("td#discount").removeClass('negative');
    $("td#discount").text(integerToCurrency(discount));
    updateTotal();
  }
  
  function getDiscount(checked_type) {
    var discounted_price = 0;
    var original_price = 0;
    if (checked_type.val() == 1) {
      original_price = #{RegistrationType.find(1).price(@attendee.registration_date)};
      discounted_price = #{RegistrationPeriod.find_by_title('registration_period.pre_register').price_for_registration_type(RegistrationType.find(1))};
    } else if (checked_type.val() == 2) {
      original_price = #{RegistrationType.find(2).price(@attendee.registration_date)};
      discounted_price = #{RegistrationPeriod.find_by_title('registration_period.pre_register').price_for_registration_type(RegistrationType.find(2))};
    } else if (checked_type.val() == 3) {
      original_price = #{RegistrationType.find(3).price(@attendee.registration_date)};
      discounted_price = #{RegistrationPeriod.find_by_title('registration_period.pre_register').price_for_registration_type(RegistrationType.find(3))};
    }
    return discounted_price - original_price;
  }
  
  function courseTriggered() {
    updateCourseEnablement();
  
    var price = 0;
    
    var courses = $("#attendee_courses_input fieldset ol li label input:checked");
    for(var i = 0; i < courses.length; i++) {
      if ($(courses[i]).val() == 1) {
        price += #{Course.find(1).price(@attendee.registration_date)};
      } else if($(courses[i]).val() == 2) {
        price += #{Course.find(2).price(@attendee.registration_date)};
      } else if($(courses[i]).val() == 3) {
        price += #{Course.find(3).price(@attendee.registration_date)};
      } else if($(courses[i]).val() == 4) {
        price += #{Course.find(4).price(@attendee.registration_date)};
      } else if($(courses[i]).val() == 5) {
        price += #{Course.find(5).price(@attendee.registration_date)};
      }
    }
  
    $("td#course_price").text(integerToCurrency(price));
    updateTotal();
  }
  
  function updateCourseEnablement() {
    var checked_courses = $("#attendee_courses_input fieldset ol li label input:checked");
    
    var condition;
    if(checked_courses.length == 0) {
      condition = function(current) { return true; };
    } else {
      var first_course = checked_courses[0];
      if($(first_course).val() == 3 || $(first_course).val() == 4) {
        condition = function(current) { return $(current).val() != 3 &&  $(current).val() != 4 };
      } else {
        condition = function(current) { return current != first_course };
      }
    }
    
    var lambda;
    if(checked_courses.length == 0) {
      lambda = function(current) { current.removeAttr('disabled'); };
    } else {
      lambda = function(current) { current.attr('disabled','disabled'); };
    }
    
    var courses = $("#attendee_courses_input fieldset ol li label input");
    for(var i = 0; i < courses.length; i++) {
      if($(courses[i]).parent('label').text().match(/\*\*$/)) {
        $(courses[i]).attr('disabled', 'disabled');
      } else if(condition(courses[i])) {
        lambda($(courses[i]));
      }
    }
  }
  
  function updateTotal() {
    var total = toFloat($("td#registration_price").text());
    total += toFloat($("td#course_price").text());
    total += toFloat($("td#discount").text());
    $("td#total").text(integerToCurrency(total));
  }
  
  function toFloat(text) {
    var match = /R\$ (-?\d+),\d+/.exec(text);
    return parseFloat(match[1]);
  }
  
  function integerToCurrency(value) {
    return "R$ " + value + ",00";
  }
