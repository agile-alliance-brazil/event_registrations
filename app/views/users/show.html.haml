- title t('title.profile', :username => @user.full_name)

.attendances
  %p
    %strong= t('event.attendance.list')
  - @user.events.each do |event|
    %ul.event
      - @user.registrations_for_event(event).each do |attendance|
        %li
          .status
            = link_to "#{event.name}: #{t("attendance.status.#{attendance.status}")}", attendance_path(attendance)
            - if attendance.can_vote?
              \-
              = link_to t('event.attendance.enable_voting'), voting_instructions_attendance_path(attendance)
          - if attendance.cancellable?
            = link_to 'X', attendance, method: :delete, class: 'remove', data: { confirm: t('attendance.cancel_confirmation', event: event.name) }
  - (Event.all - @user.events).each do |event|
    %ul.event
      %li= link_to t('event.attendance.add', name: event.name), new_event_attendance_path(event), class: 'add_attendance'
.clear

.authentications
  %p
    %strong= t('authentication.list')
  - @user.authentications.each do |authentication|
    .authentication
      = image_tag "#{authentication.provider}_32.png", :size => "32x32"
      .provider= t("authentication.providers.#{authentication.provider}")
      .uid= authentication.uid
.clear

- providers = Authentication::PROVIDERS - @user.authentications.map(&:provider)
- unless providers.empty?
  %p
    %strong= t('authentication.add')
  = render :partial => 'shared/providers', locals: { providers: providers }
